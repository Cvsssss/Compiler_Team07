Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INT ID LPAREN RPAREN LBRACE statements RBRACE
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> declaration
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> printf
Rule 8     statement -> return SEMICOLON
Rule 9     declaration -> tipo ID SEMICOLON
Rule 10    tipo -> INT
Rule 11    tipo -> FLOAT
Rule 12    tipo -> CHAR
Rule 13    tipo -> DOUBLE
Rule 14    tipo -> LONG
Rule 15    tipo -> SHORT
Rule 16    assignment -> ID IGUALS expression SEMICOLON
Rule 17    expression -> expression PLUS term
Rule 18    expression -> expression MINUS term
Rule 19    expression -> expression GT term
Rule 20    expression -> expression LT term
Rule 21    expression -> expression EQUALS term
Rule 22    expression -> term
Rule 23    term -> term TIMES factor
Rule 24    term -> term DIVIDE factor
Rule 25    term -> factor
Rule 26    factor -> NUMBER
Rule 27    factor -> ID
Rule 28    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 29    printf -> PRINTF LPAREN STRING RPAREN SEMICOLON
Rule 30    return -> RETURN expression

Terminals, with rules where they appear

CHAR                 : 12
DIVIDE               : 24
DOUBLE               : 13
ELSE                 : 28
EQUALS               : 21
FLOAT                : 11
GT                   : 19
ID                   : 1 9 16 27
IF                   : 28
IGUALS               : 16
INT                  : 1 10
LBRACE               : 1 28 28
LONG                 : 14
LPAREN               : 1 28 29
LT                   : 20
MINUS                : 18
NUMBER               : 26
PLUS                 : 17
PRINTF               : 29
RBRACE               : 1 28 28
RETURN               : 30
RPAREN               : 1 28 29
SEMICOLON            : 8 9 16 29
SHORT                : 15
STRING               : 29
TIMES                : 23
error                : 

Nonterminals, with rules where they appear

assignment           : 5
declaration          : 4
expression           : 16 17 18 19 20 21 28 30
factor               : 23 24 25
if_statement         : 6
printf               : 7
programa             : 0
return               : 8
statement            : 2 3
statements           : 1 2 28 28
term                 : 17 18 19 20 21 22 23 24
tipo                 : 9

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INT ID LPAREN RPAREN LBRACE statements RBRACE

    INT             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INT . ID LPAREN RPAREN LBRACE statements RBRACE

    ID              shift and go to state 3


state 3

    (1) programa -> INT ID . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 4


state 4

    (1) programa -> INT ID LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 5


state 5

    (1) programa -> INT ID LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 6


state 6

    (1) programa -> INT ID LPAREN RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statements                     shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 7

    (10) tipo -> INT .

    ID              reduce using rule 10 (tipo -> INT .)


state 8

    (16) assignment -> ID . IGUALS expression SEMICOLON

    IGUALS          shift and go to state 25


state 9

    (1) programa -> INT ID LPAREN RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    RBRACE          shift and go to state 26
    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statement                      shift and go to state 27
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 10

    (3) statements -> statement .

    RBRACE          reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    PRINTF          reduce using rule 3 (statements -> statement .)
    RETURN          reduce using rule 3 (statements -> statement .)
    INT             reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    CHAR            reduce using rule 3 (statements -> statement .)
    DOUBLE          reduce using rule 3 (statements -> statement .)
    LONG            reduce using rule 3 (statements -> statement .)
    SHORT           reduce using rule 3 (statements -> statement .)


state 11

    (4) statement -> declaration .

    RBRACE          reduce using rule 4 (statement -> declaration .)
    ID              reduce using rule 4 (statement -> declaration .)
    IF              reduce using rule 4 (statement -> declaration .)
    PRINTF          reduce using rule 4 (statement -> declaration .)
    RETURN          reduce using rule 4 (statement -> declaration .)
    INT             reduce using rule 4 (statement -> declaration .)
    FLOAT           reduce using rule 4 (statement -> declaration .)
    CHAR            reduce using rule 4 (statement -> declaration .)
    DOUBLE          reduce using rule 4 (statement -> declaration .)
    LONG            reduce using rule 4 (statement -> declaration .)
    SHORT           reduce using rule 4 (statement -> declaration .)


state 12

    (5) statement -> assignment .

    RBRACE          reduce using rule 5 (statement -> assignment .)
    ID              reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    PRINTF          reduce using rule 5 (statement -> assignment .)
    RETURN          reduce using rule 5 (statement -> assignment .)
    INT             reduce using rule 5 (statement -> assignment .)
    FLOAT           reduce using rule 5 (statement -> assignment .)
    CHAR            reduce using rule 5 (statement -> assignment .)
    DOUBLE          reduce using rule 5 (statement -> assignment .)
    LONG            reduce using rule 5 (statement -> assignment .)
    SHORT           reduce using rule 5 (statement -> assignment .)


state 13

    (6) statement -> if_statement .

    RBRACE          reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    PRINTF          reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    INT             reduce using rule 6 (statement -> if_statement .)
    FLOAT           reduce using rule 6 (statement -> if_statement .)
    CHAR            reduce using rule 6 (statement -> if_statement .)
    DOUBLE          reduce using rule 6 (statement -> if_statement .)
    LONG            reduce using rule 6 (statement -> if_statement .)
    SHORT           reduce using rule 6 (statement -> if_statement .)


state 14

    (7) statement -> printf .

    RBRACE          reduce using rule 7 (statement -> printf .)
    ID              reduce using rule 7 (statement -> printf .)
    IF              reduce using rule 7 (statement -> printf .)
    PRINTF          reduce using rule 7 (statement -> printf .)
    RETURN          reduce using rule 7 (statement -> printf .)
    INT             reduce using rule 7 (statement -> printf .)
    FLOAT           reduce using rule 7 (statement -> printf .)
    CHAR            reduce using rule 7 (statement -> printf .)
    DOUBLE          reduce using rule 7 (statement -> printf .)
    LONG            reduce using rule 7 (statement -> printf .)
    SHORT           reduce using rule 7 (statement -> printf .)


state 15

    (8) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 28


state 16

    (9) declaration -> tipo . ID SEMICOLON

    ID              shift and go to state 29


state 17

    (28) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 30


state 18

    (29) printf -> PRINTF . LPAREN STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 31


state 19

    (30) return -> RETURN . expression
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GT term
    (20) expression -> . expression LT term
    (21) expression -> . expression EQUALS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 20

    (11) tipo -> FLOAT .

    ID              reduce using rule 11 (tipo -> FLOAT .)


state 21

    (12) tipo -> CHAR .

    ID              reduce using rule 12 (tipo -> CHAR .)


state 22

    (13) tipo -> DOUBLE .

    ID              reduce using rule 13 (tipo -> DOUBLE .)


state 23

    (14) tipo -> LONG .

    ID              reduce using rule 14 (tipo -> LONG .)


state 24

    (15) tipo -> SHORT .

    ID              reduce using rule 15 (tipo -> SHORT .)


state 25

    (16) assignment -> ID IGUALS . expression SEMICOLON
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GT term
    (20) expression -> . expression LT term
    (21) expression -> . expression EQUALS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 37
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 26

    (1) programa -> INT ID LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 1 (programa -> INT ID LPAREN RPAREN LBRACE statements RBRACE .)


state 27

    (2) statements -> statements statement .

    RBRACE          reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    PRINTF          reduce using rule 2 (statements -> statements statement .)
    RETURN          reduce using rule 2 (statements -> statements statement .)
    INT             reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    CHAR            reduce using rule 2 (statements -> statements statement .)
    DOUBLE          reduce using rule 2 (statements -> statements statement .)
    LONG            reduce using rule 2 (statements -> statements statement .)
    SHORT           reduce using rule 2 (statements -> statements statement .)


state 28

    (8) statement -> return SEMICOLON .

    RBRACE          reduce using rule 8 (statement -> return SEMICOLON .)
    ID              reduce using rule 8 (statement -> return SEMICOLON .)
    IF              reduce using rule 8 (statement -> return SEMICOLON .)
    PRINTF          reduce using rule 8 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 8 (statement -> return SEMICOLON .)
    INT             reduce using rule 8 (statement -> return SEMICOLON .)
    FLOAT           reduce using rule 8 (statement -> return SEMICOLON .)
    CHAR            reduce using rule 8 (statement -> return SEMICOLON .)
    DOUBLE          reduce using rule 8 (statement -> return SEMICOLON .)
    LONG            reduce using rule 8 (statement -> return SEMICOLON .)
    SHORT           reduce using rule 8 (statement -> return SEMICOLON .)


state 29

    (9) declaration -> tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 38


state 30

    (28) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GT term
    (20) expression -> . expression LT term
    (21) expression -> . expression EQUALS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 39
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 31

    (29) printf -> PRINTF LPAREN . STRING RPAREN SEMICOLON

    STRING          shift and go to state 40


state 32

    (30) return -> RETURN expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GT term
    (20) expression -> expression . LT term
    (21) expression -> expression . EQUALS term

    SEMICOLON       reduce using rule 30 (return -> RETURN expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    GT              shift and go to state 43
    LT              shift and go to state 44
    EQUALS          shift and go to state 45


state 33

    (22) expression -> term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 22 (expression -> term .)
    MINUS           reduce using rule 22 (expression -> term .)
    GT              reduce using rule 22 (expression -> term .)
    LT              reduce using rule 22 (expression -> term .)
    EQUALS          reduce using rule 22 (expression -> term .)
    SEMICOLON       reduce using rule 22 (expression -> term .)
    RPAREN          reduce using rule 22 (expression -> term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 34

    (25) term -> factor .

    TIMES           reduce using rule 25 (term -> factor .)
    DIVIDE          reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    GT              reduce using rule 25 (term -> factor .)
    LT              reduce using rule 25 (term -> factor .)
    EQUALS          reduce using rule 25 (term -> factor .)
    SEMICOLON       reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)


state 35

    (26) factor -> NUMBER .

    TIMES           reduce using rule 26 (factor -> NUMBER .)
    DIVIDE          reduce using rule 26 (factor -> NUMBER .)
    PLUS            reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    GT              reduce using rule 26 (factor -> NUMBER .)
    LT              reduce using rule 26 (factor -> NUMBER .)
    EQUALS          reduce using rule 26 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 26 (factor -> NUMBER .)
    RPAREN          reduce using rule 26 (factor -> NUMBER .)


state 36

    (27) factor -> ID .

    TIMES           reduce using rule 27 (factor -> ID .)
    DIVIDE          reduce using rule 27 (factor -> ID .)
    PLUS            reduce using rule 27 (factor -> ID .)
    MINUS           reduce using rule 27 (factor -> ID .)
    GT              reduce using rule 27 (factor -> ID .)
    LT              reduce using rule 27 (factor -> ID .)
    EQUALS          reduce using rule 27 (factor -> ID .)
    SEMICOLON       reduce using rule 27 (factor -> ID .)
    RPAREN          reduce using rule 27 (factor -> ID .)


state 37

    (16) assignment -> ID IGUALS expression . SEMICOLON
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GT term
    (20) expression -> expression . LT term
    (21) expression -> expression . EQUALS term

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    GT              shift and go to state 43
    LT              shift and go to state 44
    EQUALS          shift and go to state 45


state 38

    (9) declaration -> tipo ID SEMICOLON .

    RBRACE          reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    ID              reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    IF              reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    PRINTF          reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    RETURN          reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    INT             reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    FLOAT           reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    CHAR            reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    DOUBLE          reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    LONG            reduce using rule 9 (declaration -> tipo ID SEMICOLON .)
    SHORT           reduce using rule 9 (declaration -> tipo ID SEMICOLON .)


state 39

    (28) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GT term
    (20) expression -> expression . LT term
    (21) expression -> expression . EQUALS term

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    GT              shift and go to state 43
    LT              shift and go to state 44
    EQUALS          shift and go to state 45


state 40

    (29) printf -> PRINTF LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 50


state 41

    (17) expression -> expression PLUS . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    term                           shift and go to state 51
    factor                         shift and go to state 34

state 42

    (18) expression -> expression MINUS . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    term                           shift and go to state 52
    factor                         shift and go to state 34

state 43

    (19) expression -> expression GT . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    term                           shift and go to state 53
    factor                         shift and go to state 34

state 44

    (20) expression -> expression LT . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    term                           shift and go to state 54
    factor                         shift and go to state 34

state 45

    (21) expression -> expression EQUALS . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    term                           shift and go to state 55
    factor                         shift and go to state 34

state 46

    (23) term -> term TIMES . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    factor                         shift and go to state 56

state 47

    (24) term -> term DIVIDE . factor
    (26) factor -> . NUMBER
    (27) factor -> . ID

    NUMBER          shift and go to state 35
    ID              shift and go to state 36

    factor                         shift and go to state 57

state 48

    (16) assignment -> ID IGUALS expression SEMICOLON .

    RBRACE          reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    ID              reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    IF              reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    PRINTF          reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    RETURN          reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    INT             reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    FLOAT           reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    CHAR            reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    DOUBLE          reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    LONG            reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)
    SHORT           reduce using rule 16 (assignment -> ID IGUALS expression SEMICOLON .)


state 49

    (28) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 58


state 50

    (29) printf -> PRINTF LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 59


state 51

    (17) expression -> expression PLUS term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    MINUS           reduce using rule 17 (expression -> expression PLUS term .)
    GT              reduce using rule 17 (expression -> expression PLUS term .)
    LT              reduce using rule 17 (expression -> expression PLUS term .)
    EQUALS          reduce using rule 17 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 52

    (18) expression -> expression MINUS term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    GT              reduce using rule 18 (expression -> expression MINUS term .)
    LT              reduce using rule 18 (expression -> expression MINUS term .)
    EQUALS          reduce using rule 18 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 53

    (19) expression -> expression GT term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 19 (expression -> expression GT term .)
    MINUS           reduce using rule 19 (expression -> expression GT term .)
    GT              reduce using rule 19 (expression -> expression GT term .)
    LT              reduce using rule 19 (expression -> expression GT term .)
    EQUALS          reduce using rule 19 (expression -> expression GT term .)
    SEMICOLON       reduce using rule 19 (expression -> expression GT term .)
    RPAREN          reduce using rule 19 (expression -> expression GT term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 54

    (20) expression -> expression LT term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 20 (expression -> expression LT term .)
    MINUS           reduce using rule 20 (expression -> expression LT term .)
    GT              reduce using rule 20 (expression -> expression LT term .)
    LT              reduce using rule 20 (expression -> expression LT term .)
    EQUALS          reduce using rule 20 (expression -> expression LT term .)
    SEMICOLON       reduce using rule 20 (expression -> expression LT term .)
    RPAREN          reduce using rule 20 (expression -> expression LT term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 55

    (21) expression -> expression EQUALS term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 21 (expression -> expression EQUALS term .)
    MINUS           reduce using rule 21 (expression -> expression EQUALS term .)
    GT              reduce using rule 21 (expression -> expression EQUALS term .)
    LT              reduce using rule 21 (expression -> expression EQUALS term .)
    EQUALS          reduce using rule 21 (expression -> expression EQUALS term .)
    SEMICOLON       reduce using rule 21 (expression -> expression EQUALS term .)
    RPAREN          reduce using rule 21 (expression -> expression EQUALS term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 56

    (23) term -> term TIMES factor .

    TIMES           reduce using rule 23 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 23 (term -> term TIMES factor .)
    PLUS            reduce using rule 23 (term -> term TIMES factor .)
    MINUS           reduce using rule 23 (term -> term TIMES factor .)
    GT              reduce using rule 23 (term -> term TIMES factor .)
    LT              reduce using rule 23 (term -> term TIMES factor .)
    EQUALS          reduce using rule 23 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 23 (term -> term TIMES factor .)
    RPAREN          reduce using rule 23 (term -> term TIMES factor .)


state 57

    (24) term -> term DIVIDE factor .

    TIMES           reduce using rule 24 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 24 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 24 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 24 (term -> term DIVIDE factor .)
    GT              reduce using rule 24 (term -> term DIVIDE factor .)
    LT              reduce using rule 24 (term -> term DIVIDE factor .)
    EQUALS          reduce using rule 24 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 24 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 24 (term -> term DIVIDE factor .)


state 58

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statements                     shift and go to state 60
    statement                      shift and go to state 10
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 59

    (29) printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .

    RBRACE          reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    ID              reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    IF              reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    PRINTF          reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    INT             reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    CHAR            reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    LONG            reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    SHORT           reduce using rule 29 (printf -> PRINTF LPAREN STRING RPAREN SEMICOLON .)


state 60

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (2) statements -> statements . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    RBRACE          shift and go to state 61
    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statement                      shift and go to state 27
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 61

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ELSE            shift and go to state 62


state 62

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 63


state 63

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statements                     shift and go to state 64
    statement                      shift and go to state 10
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 64

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . printf
    (8) statement -> . return SEMICOLON
    (9) declaration -> . tipo ID SEMICOLON
    (16) assignment -> . ID IGUALS expression SEMICOLON
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (29) printf -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (30) return -> . RETURN expression
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . CHAR
    (13) tipo -> . DOUBLE
    (14) tipo -> . LONG
    (15) tipo -> . SHORT

    RBRACE          shift and go to state 65
    ID              shift and go to state 8
    IF              shift and go to state 17
    PRINTF          shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 7
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    DOUBLE          shift and go to state 22
    LONG            shift and go to state 23
    SHORT           shift and go to state 24

    statement                      shift and go to state 27
    declaration                    shift and go to state 11
    assignment                     shift and go to state 12
    if_statement                   shift and go to state 13
    printf                         shift and go to state 14
    return                         shift and go to state 15
    tipo                           shift and go to state 16

state 65

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    RBRACE          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINTF          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOAT           reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LONG            reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SHORT           reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

